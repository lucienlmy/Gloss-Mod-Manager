/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// Generated by unplugin-auto-import
// biome-ignore lint: disable
export {}
declare global {
  const APIAria2: typeof import('./src/model/APIAria2')['APIAria2']
  const AppAnalytics: typeof import('./src/model/Analytics')['AppAnalytics']
  const Backup: typeof import('./src/model/Backup')['Backup']
  const Config: typeof import('./src/model/Config')['Config']
  const Cryption: typeof import('./src/model/Cryption')['Cryption']
  const EffectScope: typeof import('vue')['EffectScope']
  const ElMessageBox: typeof import('element-plus/es')['ElMessageBox']
  const ElectronStore: typeof import('./src/model/ElectronStore')['ElectronStore']
  const Expands: typeof import('./src/model/Expands')['Expands']
  const FileHandler: typeof import('./src/model/FileHandler')['FileHandler']
  const FormRules: typeof import('./src/model/FormRules')['FormRules']
  const LocalLang: typeof import('./src/model/LocalLang')['LocalLang']
  const Manager: typeof import('./src/model/Manager')['Manager']
  const Package: typeof import('./src/model/Package')['Package']
  const ParsingGmm: typeof import('./src/model/ParsingGmm')['ParsingGmm']
  const REEngine: typeof import('./src/model/REEngine')['REEngine']
  const Steam: typeof import('./src/model/Steam')['Steam']
  const UnityGame: typeof import('./src/model/UnityGame')['UnityGame']
  const UnityGameILCPP2: typeof import('./src/model/UnityGame')['UnityGameILCPP2']
  const UnrealEngine: typeof import('./src/model/UnrealEngine')['UnrealEngine']
  const Unzipper: typeof import('./src/model/Unzipper')['Unzipper']
  const computed: typeof import('vue')['computed']
  const createApp: typeof import('vue')['createApp']
  const customRef: typeof import('vue')['customRef']
  const defineAsyncComponent: typeof import('vue')['defineAsyncComponent']
  const defineComponent: typeof import('vue')['defineComponent']
  const effectScope: typeof import('vue')['effectScope']
  const getCurrentInstance: typeof import('vue')['getCurrentInstance']
  const getCurrentScope: typeof import('vue')['getCurrentScope']
  const h: typeof import('vue')['h']
  const inject: typeof import('vue')['inject']
  const isProxy: typeof import('vue')['isProxy']
  const isReactive: typeof import('vue')['isReactive']
  const isReadonly: typeof import('vue')['isReadonly']
  const isRef: typeof import('vue')['isRef']
  const markRaw: typeof import('vue')['markRaw']
  const nextTick: typeof import('vue')['nextTick']
  const onActivated: typeof import('vue')['onActivated']
  const onBeforeMount: typeof import('vue')['onBeforeMount']
  const onBeforeRouteLeave: typeof import('vue-router')['onBeforeRouteLeave']
  const onBeforeRouteUpdate: typeof import('vue-router')['onBeforeRouteUpdate']
  const onBeforeUnmount: typeof import('vue')['onBeforeUnmount']
  const onBeforeUpdate: typeof import('vue')['onBeforeUpdate']
  const onDeactivated: typeof import('vue')['onDeactivated']
  const onErrorCaptured: typeof import('vue')['onErrorCaptured']
  const onMounted: typeof import('vue')['onMounted']
  const onRenderTracked: typeof import('vue')['onRenderTracked']
  const onRenderTriggered: typeof import('vue')['onRenderTriggered']
  const onScopeDispose: typeof import('vue')['onScopeDispose']
  const onServerPrefetch: typeof import('vue')['onServerPrefetch']
  const onUnmounted: typeof import('vue')['onUnmounted']
  const onUpdated: typeof import('vue')['onUpdated']
  const onWatcherCleanup: typeof import('vue')['onWatcherCleanup']
  const provide: typeof import('vue')['provide']
  const reactive: typeof import('vue')['reactive']
  const readonly: typeof import('vue')['readonly']
  const ref: typeof import('vue')['ref']
  const resolveComponent: typeof import('vue')['resolveComponent']
  const shallowReactive: typeof import('vue')['shallowReactive']
  const shallowReadonly: typeof import('vue')['shallowReadonly']
  const shallowRef: typeof import('vue')['shallowRef']
  const toRaw: typeof import('vue')['toRaw']
  const toRef: typeof import('vue')['toRef']
  const toRefs: typeof import('vue')['toRefs']
  const toValue: typeof import('vue')['toValue']
  const triggerRef: typeof import('vue')['triggerRef']
  const unref: typeof import('vue')['unref']
  const useArchive: typeof import('./src/stores/useArchive')['useArchive']
  const useAttrs: typeof import('vue')['useAttrs']
  const useBackupGame: typeof import('./src/stores/useBackupGame')['useBackupGame']
  const useContent: typeof import('./src/stores/useContent')['useContent']
  const useCssModule: typeof import('vue')['useCssModule']
  const useCssVars: typeof import('vue')['useCssVars']
  const useCurseForge: typeof import('./src/stores/useCurseForge')['useCurseForge']
  const useCustomize: typeof import('./src/stores/useCustomize')['useCustomize']
  const useDownload: typeof import('./src/stores/useDownload')['useDownload']
  const useExplore: typeof import('./src/stores/useExplore')['useExplore']
  const useGameBanana: typeof import('./src/stores/useGameBanana')['useGameBanana']
  const useGames: typeof import('./src/stores/useGames')['useGames']
  const useGithub: typeof import('./src/stores/useGithub')['useGithub']
  const useI18n: typeof import('vue-i18n')['useI18n']
  const useId: typeof import('vue')['useId']
  const useLink: typeof import('vue-router')['useLink']
  const useMain: typeof import('./src/stores/useMain')['useMain']
  const useManager: typeof import('./src/stores/useManager')['useManager']
  const useModIo: typeof import('./src/stores/useModIo')['useModIo']
  const useModView: typeof import('./src/stores/useModView')['useModView']
  const useModel: typeof import('vue')['useModel']
  const useNews: typeof import('./src/stores/useNews')['useNews']
  const useNexusMods: typeof import('./src/stores/useNexusMods')['useNexusMods']
  const usePacks: typeof import('./src/stores/usePacks')['usePacks']
  const useRoute: typeof import('vue-router')['useRoute']
  const useRouter: typeof import('vue-router')['useRouter']
  const useSettings: typeof import('./src/stores/useSettings')['useSettings']
  const useSlots: typeof import('vue')['useSlots']
  const useSortMod: typeof import('./src/stores/useSortMod')['useSortMod']
  const useSteamWorkshop: typeof import('./src/stores/useSteamWorkshop')['useSteamWorkshop']
  const useTemplateRef: typeof import('vue')['useTemplateRef']
  const useThunderstore: typeof import('./src/stores/useThunderstore')['useThunderstore']
  const useUser: typeof import('./src/stores/useUser')['useUser']
  const watch: typeof import('vue')['watch']
  const watchEffect: typeof import('vue')['watchEffect']
  const watchPostEffect: typeof import('vue')['watchPostEffect']
  const watchSyncEffect: typeof import('vue')['watchSyncEffect']
}
// for type re-export
declare global {
  // @ts-ignore
  export type { Component, ComponentPublicInstance, ComputedRef, DirectiveBinding, ExtractDefaultPropTypes, ExtractPropTypes, ExtractPublicPropTypes, InjectionKey, PropType, Ref, MaybeRef, MaybeRefOrGetter, VNode, WritableComputedRef } from 'vue'
  import('vue')
  // @ts-ignore
  export type { AppAnalytics } from './src/model/Analytics'
  import('./src/model/Analytics')
  // @ts-ignore
  export type { APIAria2 } from './src/model/APIAria2'
  import('./src/model/APIAria2')
  // @ts-ignore
  export type { Backup } from './src/model/Backup'
  import('./src/model/Backup')
  // @ts-ignore
  export type { Config } from './src/model/Config'
  import('./src/model/Config')
  // @ts-ignore
  export type { Cryption } from './src/model/Cryption'
  import('./src/model/Cryption')
  // @ts-ignore
  export type { ElectronStore } from './src/model/ElectronStore'
  import('./src/model/ElectronStore')
  // @ts-ignore
  export type { Expands } from './src/model/Expands'
  import('./src/model/Expands')
  // @ts-ignore
  export type { FileHandler } from './src/model/FileHandler'
  import('./src/model/FileHandler')
  // @ts-ignore
  export type { LocalLang } from './src/model/LocalLang'
  import('./src/model/LocalLang')
  // @ts-ignore
  export type { Manager } from './src/model/Manager'
  import('./src/model/Manager')
  // @ts-ignore
  export type { Package } from './src/model/Package'
  import('./src/model/Package')
  // @ts-ignore
  export type { ParsingGmm } from './src/model/ParsingGmm'
  import('./src/model/ParsingGmm')
  // @ts-ignore
  export type { REEngine } from './src/model/REEngine'
  import('./src/model/REEngine')
  // @ts-ignore
  export type { Steam } from './src/model/Steam'
  import('./src/model/Steam')
  // @ts-ignore
  export type { UnityGame, UnityGameILCPP2 } from './src/model/UnityGame'
  import('./src/model/UnityGame')
  // @ts-ignore
  export type { UnrealEngine } from './src/model/UnrealEngine'
  import('./src/model/UnrealEngine')
  // @ts-ignore
  export type { Unzipper } from './src/model/Unzipper'
  import('./src/model/Unzipper')
}
